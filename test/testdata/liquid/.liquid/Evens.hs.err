{"o_vars":null,"o_types":[[{"spanInfo":{"startLine":15,"endLine":15,"endCol":15,"startCol":12,"filename":"/home/alanz/mysrc/github/alanz/haskell-ide-engine/test/testdata/liquid/Evens.hs"},"realSpan":true},[[null,"{v : x1:GHC.Types.Bool -> {v : GHC.Types.Bool | v <=> not x1} | v == GHC.Classes.not}"]]],[{"spanInfo":{"startLine":6,"endLine":6,"endCol":23,"startCol":19,"filename":"/home/alanz/mysrc/github/alanz/haskell-ide-engine/test/testdata/liquid/Evens.hs"},"realSpan":true},[["lq_anf$##7205759403792802156","GHC.Types.Int"]]],[{"spanInfo":{"startLine":18,"endLine":18,"endCol":28,"startCol":21,"filename":"/home/alanz/mysrc/github/alanz/haskell-ide-engine/test/testdata/liquid/Evens.hs"},"realSpan":true},[["lq_anf$##7205759403792802152","{v : GHC.Types.Int | v == (0 : int)}"]]],[{"spanInfo":{"startLine":29,"endLine":29,"endCol":7,"startCol":1,"filename":"/home/alanz/mysrc/github/alanz/haskell-ide-engine/test/testdata/liquid/Evens.hs"},"realSpan":true},[["Main.double","[{v : GHC.Types.Int | v >= 0}] -> [{v : GHC.Types.Int | v mod 2 == 0}]"]]],[{"spanInfo":{"startLine":6,"endLine":6,"endCol":30,"startCol":27,"filename":"/home/alanz/mysrc/github/alanz/haskell-ide-engine/test/testdata/liquid/Evens.hs"},"realSpan":true},[["lq_anf$##7205759403792802159","GHC.Types.Int"]]],[{"spanInfo":{"startLine":13,"endLine":13,"endCol":7,"startCol":1,"filename":"/home/alanz/mysrc/github/alanz/haskell-ide-engine/test/testdata/liquid/Evens.hs"},"realSpan":true},[["Main.isEven","x1:{v : GHC.Types.Int | v >= 0} -> {v : GHC.Types.Bool | v <=> x1 mod 2 == 0}"]]],[{"spanInfo":{"startLine":9,"endLine":9,"endCol":8,"startCol":1,"filename":"/home/alanz/mysrc/github/alanz/haskell-ide-engine/test/testdata/liquid/Evens.hs"},"realSpan":true},[["Main.notEven","{v : GHC.Types.Int | v mod 2 == 0}"]]],[{"spanInfo":{"startLine":15,"endLine":15,"endCol":27,"startCol":26,"filename":"/home/alanz/mysrc/github/alanz/haskell-ide-engine/test/testdata/liquid/Evens.hs"},"realSpan":true},[[null,"x1:GHC.Types.Int -> x2:GHC.Types.Int -> {v : GHC.Types.Int | v == x1 - x2}"]]],[{"spanInfo":{"startLine":18,"endLine":18,"endCol":30,"startCol":21,"filename":"/home/alanz/mysrc/github/alanz/haskell-ide-engine/test/testdata/liquid/Evens.hs"},"realSpan":true},[["lq_anf$##7205759403792802153","[{v : GHC.Types.Int | v < n}]"]]],[{"spanInfo":{"startLine":26,"endLine":26,"endCol":20,"startCol":15,"filename":"/home/alanz/mysrc/github/alanz/haskell-ide-engine/test/testdata/liquid/Evens.hs"},"realSpan":true},[["lq_anf$##7205759403792802136","GHC.Types.Int"]]],[{"spanInfo":{"startLine":22,"endLine":22,"endCol":27,"startCol":22,"filename":"/home/alanz/mysrc/github/alanz/haskell-ide-engine/test/testdata/liquid/Evens.hs"},"realSpan":true},[["Main.range","x1:GHC.Types.Int -> x2:GHC.Types.Int -> [{v : GHC.Types.Int | x1 <= v\n                                                              && v < x2}]"]]],[{"spanInfo":{"startLine":26,"endLine":26,"endCol":11,"startCol":10,"filename":"/home/alanz/mysrc/github/alanz/haskell-ide-engine/test/testdata/liquid/Evens.hs"},"realSpan":true},[["k","{v : GHC.Types.Int | v mod 2 == 0}"]]],[{"spanInfo":{"startLine":22,"endLine":22,"endCol":32,"startCol":31,"filename":"/home/alanz/mysrc/github/alanz/haskell-ide-engine/test/testdata/liquid/Evens.hs"},"realSpan":true},[[null,"x1:GHC.Types.Int -> x2:GHC.Types.Int -> {v : GHC.Types.Int | v == x1 + x2}"]]],[{"spanInfo":{"startLine":1,"endLine":1,"endCol":1,"startCol":1,"filename":"/home/alanz/mysrc/github/alanz/haskell-ide-engine/test/testdata/liquid/Evens.hs"},"realSpan":true},[["Main.$trModule","GHC.Types.Module"]]],[{"spanInfo":{"startLine":29,"endLine":29,"endCol":30,"startCol":13,"filename":"/home/alanz/mysrc/github/alanz/haskell-ide-engine/test/testdata/liquid/Evens.hs"},"realSpan":true},[["lq_anf$##7205759403792802134","{VV : [{VV : GHC.Types.Int | VV >= 0\n                             && VV mod 2 == 0}] | len VV <= len xs\n                                                  && len VV >= 0}"]]],[{"spanInfo":{"startLine":29,"endLine":29,"endCol":19,"startCol":14,"filename":"/home/alanz/mysrc/github/alanz/haskell-ide-engine/test/testdata/liquid/Evens.hs"},"realSpan":true},[["lq_anf$##7205759403792802133","GHC.Types.Int"]]],[{"spanInfo":{"startLine":41,"endLine":41,"endCol":16,"startCol":8,"filename":"/home/alanz/mysrc/github/alanz/haskell-ide-engine/test/testdata/liquid/Evens.hs"},"realSpan":true},[[null,"{v : [GHC.Types.Char] -> (GHC.Types.IO ()) | v == System.IO.putStrLn}"]]],[{"spanInfo":{"startLine":15,"endLine":15,"endCol":29,"startCol":17,"filename":"/home/alanz/mysrc/github/alanz/haskell-ide-engine/test/testdata/liquid/Evens.hs"},"realSpan":true},[["lq_anf$##7205759403792802147","GHC.Types.Bool"]]],[{"spanInfo":{"startLine":26,"endLine":26,"endCol":9,"startCol":7,"filename":"/home/alanz/mysrc/github/alanz/haskell-ide-engine/test/testdata/liquid/Evens.hs"},"realSpan":true},[["xs","[{v : GHC.Types.Int | v mod 2 == 0}]"]]],[{"spanInfo":{"startLine":18,"endLine":18,"endCol":40,"startCol":32,"filename":"/home/alanz/mysrc/github/alanz/haskell-ide-engine/test/testdata/liquid/Evens.hs"},"realSpan":true},[["lq_anf$##7205759403792802149","GHC.Types.Bool"]]],[{"spanInfo":{"startLine":18,"endLine":18,"endCol":26,"startCol":21,"filename":"/home/alanz/mysrc/github/alanz/haskell-ide-engine/test/testdata/liquid/Evens.hs"},"realSpan":true},[[null,"{v : x1:GHC.Types.Int -> x2:GHC.Types.Int -> [{v : GHC.Types.Int | x1 <= v\n                                                                   && v < x2}] | v == Main.range}"]]],[{"spanInfo":{"startLine":18,"endLine":18,"endCol":6,"startCol":1,"filename":"/home/alanz/mysrc/github/alanz/haskell-ide-engine/test/testdata/liquid/Evens.hs"},"realSpan":true},[["Main.evens","{v : GHC.Types.Int | v >= 0} -> [{v : GHC.Types.Int | v mod 2 == 0}]"]]],[{"spanInfo":{"startLine":6,"endLine":6,"endCol":10,"startCol":1,"filename":"/home/alanz/mysrc/github/alanz/haskell-ide-engine/test/testdata/liquid/Evens.hs"},"realSpan":true},[["Main.weAreEven","[{v : GHC.Types.Int | v mod 2 == 0}]"]]],[{"spanInfo":{"startLine":29,"endLine":29,"endCol":17,"startCol":16,"filename":"/home/alanz/mysrc/github/alanz/haskell-ide-engine/test/testdata/liquid/Evens.hs"},"realSpan":true},[[null,"x1:GHC.Types.Int -> x2:GHC.Types.Int -> {v : GHC.Types.Int | v == x1 + x2}"]]],[{"spanInfo":{"startLine":22,"endLine":22,"endCol":33,"startCol":29,"filename":"/home/alanz/mysrc/github/alanz/haskell-ide-engine/test/testdata/liquid/Evens.hs"},"realSpan":true},[["lq_anf$##7205759403792802141","GHC.Types.Int"]]],[{"spanInfo":{"startLine":21,"endLine":21,"endCol":6,"startCol":1,"filename":"/home/alanz/mysrc/github/alanz/haskell-ide-engine/test/testdata/liquid/Evens.hs"},"realSpan":true},[["Main.range","x1:GHC.Types.Int -> x2:GHC.Types.Int -> [{v : GHC.Types.Int | x1 <= v\n                                                              && v < x2}]"]]],[{"spanInfo":{"startLine":18,"endLine":18,"endCol":38,"startCol":32,"filename":"/home/alanz/mysrc/github/alanz/haskell-ide-engine/test/testdata/liquid/Evens.hs"},"realSpan":true},[[null,"{v : x1:{v : GHC.Types.Int | v >= 0} -> {v : GHC.Types.Bool | v <=> x1 mod 2 == 0} | v == Main.isEven}"]]],[{"spanInfo":{"startLine":18,"endLine":18,"endCol":41,"startCol":11,"filename":"/home/alanz/mysrc/github/alanz/haskell-ide-engine/test/testdata/liquid/Evens.hs"},"realSpan":true},[["lq_anf$##7205759403792802151","{VV : [{VV : GHC.Types.Int | VV /= n\n                             && VV <= n\n                             && VV < n\n                             && VV >= 0\n                             && VV mod 2 == 0}] | len VV >= 0}"]]],[{"spanInfo":{"startLine":22,"endLine":22,"endCol":9,"startCol":8,"filename":"/home/alanz/mysrc/github/alanz/haskell-ide-engine/test/testdata/liquid/Evens.hs"},"realSpan":true},[[null,"x1:GHC.Types.Int -> x2:GHC.Types.Int -> {v : GHC.Types.Bool | v <=> x1 < x2}"]]],[{"spanInfo":{"startLine":6,"endLine":6,"endCol":29,"startCol":28,"filename":"/home/alanz/mysrc/github/alanz/haskell-ide-engine/test/testdata/liquid/Evens.hs"},"realSpan":true},[[null,"x1:GHC.Types.Int -> x2:GHC.Types.Int -> {v : GHC.Types.Int | v == x1 - x2}"]]],[{"spanInfo":{"startLine":6,"endLine":6,"endCol":21,"startCol":20,"filename":"/home/alanz/mysrc/github/alanz/haskell-ide-engine/test/testdata/liquid/Evens.hs"},"realSpan":true},[[null,"x1:GHC.Types.Int -> x2:GHC.Types.Int -> {v : GHC.Types.Int | v == x1 - x2}"]]],[{"spanInfo":{"startLine":29,"endLine":29,"endCol":10,"startCol":8,"filename":"/home/alanz/mysrc/github/alanz/haskell-ide-engine/test/testdata/liquid/Evens.hs"},"realSpan":true},[["xs","[{v : GHC.Types.Int | v >= 0}]"]]],[{"spanInfo":{"startLine":26,"endLine":26,"endCol":31,"startCol":14,"filename":"/home/alanz/mysrc/github/alanz/haskell-ide-engine/test/testdata/liquid/Evens.hs"},"realSpan":true},[["lq_anf$##7205759403792802137","{VV : [{VV : GHC.Types.Int | VV mod 2 == 0}] | len VV <= len xs\n                                               && len VV >= 0}"]]],[{"spanInfo":{"startLine":26,"endLine":26,"endCol":18,"startCol":17,"filename":"/home/alanz/mysrc/github/alanz/haskell-ide-engine/test/testdata/liquid/Evens.hs"},"realSpan":true},[[null,"x1:GHC.Types.Int -> x2:GHC.Types.Int -> {v : GHC.Types.Int | v == x1 + x2}"]]],[{"spanInfo":{"startLine":15,"endLine":15,"endCol":28,"startCol":25,"filename":"/home/alanz/mysrc/github/alanz/haskell-ide-engine/test/testdata/liquid/Evens.hs"},"realSpan":true},[["lq_anf$##7205759403792802146","GHC.Types.Int"]]],[{"spanInfo":{"startLine":22,"endLine":22,"endCol":12,"startCol":5,"filename":"/home/alanz/mysrc/github/alanz/haskell-ide-engine/test/testdata/liquid/Evens.hs"},"realSpan":true},[["lq_anf$##7205759403792802138","{v : GHC.Types.Bool | v <=> lo < hi}"]]],[{"spanInfo":{"startLine":41,"endLine":41,"endCol":24,"startCol":8,"filename":"/home/alanz/mysrc/github/alanz/haskell-ide-engine/test/testdata/liquid/Evens.hs"},"realSpan":true},[["lq_anf$##7205759403792802127","[GHC.Types.Char]"]]],[{"spanInfo":{"startLine":22,"endLine":22,"endCol":37,"startCol":22,"filename":"/home/alanz/mysrc/github/alanz/haskell-ide-engine/test/testdata/liquid/Evens.hs"},"realSpan":true},[["lq_anf$##7205759403792802142","[{v : GHC.Types.Int | v < hi}]"]]],[{"spanInfo":{"startLine":21,"endLine":21,"endCol":9,"startCol":7,"filename":"/home/alanz/mysrc/github/alanz/haskell-ide-engine/test/testdata/liquid/Evens.hs"},"realSpan":true},[["lo","GHC.Types.Int"]]],[{"spanInfo":{"startLine":18,"endLine":18,"endCol":8,"startCol":7,"filename":"/home/alanz/mysrc/github/alanz/haskell-ide-engine/test/testdata/liquid/Evens.hs"},"realSpan":true},[["n","{v : GHC.Types.Int | v >= 0}"]]],[{"spanInfo":{"startLine":41,"endLine":41,"endCol":5,"startCol":1,"filename":"/home/alanz/mysrc/github/alanz/haskell-ide-engine/test/testdata/liquid/Evens.hs"},"realSpan":true},[[":Main.main","(GHC.Types.IO ())"]]],[{"spanInfo":{"startLine":15,"endLine":15,"endCol":23,"startCol":17,"filename":"/home/alanz/mysrc/github/alanz/haskell-ide-engine/test/testdata/liquid/Evens.hs"},"realSpan":true},[["Main.isEven","x1:{v : GHC.Types.Int | v >= 0} -> {v : GHC.Types.Bool | v <=> x1 mod 2 == 0}"]]],[{"spanInfo":{"startLine":21,"endLine":21,"endCol":12,"startCol":10,"filename":"/home/alanz/mysrc/github/alanz/haskell-ide-engine/test/testdata/liquid/Evens.hs"},"realSpan":true},[["hi","GHC.Types.Int"]]],[{"spanInfo":{"startLine":26,"endLine":26,"endCol":6,"startCol":1,"filename":"/home/alanz/mysrc/github/alanz/haskell-ide-engine/test/testdata/liquid/Evens.hs"},"realSpan":true},[["Main.shift","[{v : GHC.Types.Int | v mod 2 == 0}] -> {v : GHC.Types.Int | v mod 2 == 0} -> [{v : GHC.Types.Int | v mod 2 == 0}]"]]]],"o_templs":[[{"spanInfo":{"startLine":15,"endLine":15,"endCol":15,"startCol":12,"filename":"/home/alanz/mysrc/github/alanz/haskell-ide-engine/test/testdata/liquid/Evens.hs"},"realSpan":true},[[null,"{lq_tmp$x##850 : lq_tmp$x##851:GHC.Types.Bool -> {lq_tmp$x##849 : GHC.Types.Bool | lq_tmp$x##849 <=> not lq_tmp$x##851} | lq_tmp$x##850 == GHC.Classes.not}"]]],[{"spanInfo":{"startLine":6,"endLine":6,"endCol":23,"startCol":19,"filename":"/home/alanz/mysrc/github/alanz/haskell-ide-engine/test/testdata/liquid/Evens.hs"},"realSpan":true},[["lq_anf$##7205759403792802156","{lq_tmp$x##1120 : GHC.Types.Int^\"lq_tmp$x##1119\" | lq_tmp$x##1120 == lq_anf$##7205759403792802154##d2dY - lq_anf$##7205759403792802155##d2dZ}"]]],[{"spanInfo":{"startLine":18,"endLine":18,"endCol":28,"startCol":21,"filename":"/home/alanz/mysrc/github/alanz/haskell-ide-engine/test/testdata/liquid/Evens.hs"},"realSpan":true},[["lq_anf$##7205759403792802152","{lq_tmp$x##1053 : GHC.Types.Int | lq_tmp$x##1053 == (0 : int)}"]]],[{"spanInfo":{"startLine":29,"endLine":29,"endCol":7,"startCol":1,"filename":"/home/alanz/mysrc/github/alanz/haskell-ide-engine/test/testdata/liquid/Evens.hs"},"realSpan":true},[["Main.double","lq_tmp$x##256:[{lq_tmp$x##0 : GHC.Types.Int | lq_tmp$x##0 >= 0}] -> [{lq_tmp$x##3 : GHC.Types.Int | lq_tmp$x##3 mod 2 == 0}]"]]],[{"spanInfo":{"startLine":6,"endLine":6,"endCol":30,"startCol":27,"filename":"/home/alanz/mysrc/github/alanz/haskell-ide-engine/test/testdata/liquid/Evens.hs"},"realSpan":true},[["lq_anf$##7205759403792802159","{lq_tmp$x##1150 : GHC.Types.Int^\"lq_tmp$x##1149\" | lq_tmp$x##1150 == lq_anf$##7205759403792802157##d2e1 - lq_anf$##7205759403792802158##d2e2}"]]],[{"spanInfo":{"startLine":13,"endLine":13,"endCol":7,"startCol":1,"filename":"/home/alanz/mysrc/github/alanz/haskell-ide-engine/test/testdata/liquid/Evens.hs"},"realSpan":true},[["Main.isEven","lq_tmp$x##798:{lq_tmp$x##0 : GHC.Types.Int | lq_tmp$x##0 >= 0} -> {v : GHC.Types.Bool | v <=> lq_tmp$x##798 mod 2 == 0}"]]],[{"spanInfo":{"startLine":9,"endLine":9,"endCol":8,"startCol":1,"filename":"/home/alanz/mysrc/github/alanz/haskell-ide-engine/test/testdata/liquid/Evens.hs"},"realSpan":true},[["Main.notEven","{lq_tmp$x##3 : GHC.Types.Int | lq_tmp$x##3 mod 2 == 0}"]]],[{"spanInfo":{"startLine":15,"endLine":15,"endCol":27,"startCol":26,"filename":"/home/alanz/mysrc/github/alanz/haskell-ide-engine/test/testdata/liquid/Evens.hs"},"realSpan":true},[[null,"lq_tmp$x##833:GHC.Types.Int -> lq_tmp$x##834:GHC.Types.Int -> {lq_tmp$x##836 : GHC.Types.Int^\"lq_tmp$x##835\" | lq_tmp$x##836 == lq_tmp$x##833 - lq_tmp$x##834}"]]],[{"spanInfo":{"startLine":18,"endLine":18,"endCol":30,"startCol":21,"filename":"/home/alanz/mysrc/github/alanz/haskell-ide-engine/test/testdata/liquid/Evens.hs"},"realSpan":true},[["lq_anf$##7205759403792802153","[{lq_tmp$x##1060 : GHC.Types.Int | lq_anf$##7205759403792802152##d2dW <= lq_tmp$x##1060\n                                   && lq_tmp$x##1060 < n##a1TA}]"]]],[{"spanInfo":{"startLine":26,"endLine":26,"endCol":20,"startCol":15,"filename":"/home/alanz/mysrc/github/alanz/haskell-ide-engine/test/testdata/liquid/Evens.hs"},"realSpan":true},[["lq_anf$##7205759403792802136","{lq_tmp$x##576 : GHC.Types.Int^\"lq_tmp$x##575\" | lq_tmp$x##576 == ds_d2dc + k##a1TF}"]]],[{"spanInfo":{"startLine":22,"endLine":22,"endCol":27,"startCol":22,"filename":"/home/alanz/mysrc/github/alanz/haskell-ide-engine/test/testdata/liquid/Evens.hs"},"realSpan":true},[["Main.range","lq_tmp$x##666:GHC.Types.Int -> lq_tmp$x##667:GHC.Types.Int -> [{v : GHC.Types.Int | lq_tmp$x##666 <= v\n                                                                                    && v < lq_tmp$x##667}]"]]],[{"spanInfo":{"startLine":26,"endLine":26,"endCol":11,"startCol":10,"filename":"/home/alanz/mysrc/github/alanz/haskell-ide-engine/test/testdata/liquid/Evens.hs"},"realSpan":true},[["k","{lq_tmp$x##3 : GHC.Types.Int | lq_tmp$x##3 mod 2 == 0}"]]],[{"spanInfo":{"startLine":22,"endLine":22,"endCol":32,"startCol":31,"filename":"/home/alanz/mysrc/github/alanz/haskell-ide-engine/test/testdata/liquid/Evens.hs"},"realSpan":true},[[null,"lq_tmp$x##733:GHC.Types.Int -> lq_tmp$x##734:GHC.Types.Int -> {lq_tmp$x##736 : GHC.Types.Int^\"lq_tmp$x##735\" | lq_tmp$x##736 == lq_tmp$x##733 + lq_tmp$x##734}"]]],[{"spanInfo":{"startLine":1,"endLine":1,"endCol":1,"startCol":1,"filename":"/home/alanz/mysrc/github/alanz/haskell-ide-engine/test/testdata/liquid/Evens.hs"},"realSpan":true},[["Main.$trModule","GHC.Types.Module"]]],[{"spanInfo":{"startLine":29,"endLine":29,"endCol":30,"startCol":13,"filename":"/home/alanz/mysrc/github/alanz/haskell-ide-engine/test/testdata/liquid/Evens.hs"},"realSpan":true},[["lq_anf$##7205759403792802134","{VV##277 : [{VV##270 : GHC.Types.Int^\"lq_tmp$x##272\" | $k_##271[ds_d2d5:=ds_d2d7][lq_tmp$x##281:=ds_d2d7][lq_tmp$x##285:=ds_d2d7]}]^\"lq_tmp$x##279\" | $k_##278[ds_d2d5:=ds_d2d7][lq_tmp$x##281:=ds_d2d7][lq_tmp$x##285:=ds_d2d7]}"]]],[{"spanInfo":{"startLine":29,"endLine":29,"endCol":19,"startCol":14,"filename":"/home/alanz/mysrc/github/alanz/haskell-ide-engine/test/testdata/liquid/Evens.hs"},"realSpan":true},[["lq_anf$##7205759403792802133","{lq_tmp$x##374 : GHC.Types.Int^\"lq_tmp$x##373\" | lq_tmp$x##374 == ds_d2d6 + ds_d2d6}"]]],[{"spanInfo":{"startLine":41,"endLine":41,"endCol":16,"startCol":8,"filename":"/home/alanz/mysrc/github/alanz/haskell-ide-engine/test/testdata/liquid/Evens.hs"},"realSpan":true},[[null,"{lq_tmp$x##203 : lq_tmp$x##205:[GHC.Types.Char] -> (GHC.Types.IO ()) | lq_tmp$x##203 == System.IO.putStrLn}"]]],[{"spanInfo":{"startLine":15,"endLine":15,"endCol":29,"startCol":17,"filename":"/home/alanz/mysrc/github/alanz/haskell-ide-engine/test/testdata/liquid/Evens.hs"},"realSpan":true},[["lq_anf$##7205759403792802147","{v : GHC.Types.Bool | v <=> lq_anf$##7205759403792802146##d2dQ mod 2 == 0}"]]],[{"spanInfo":{"startLine":26,"endLine":26,"endCol":9,"startCol":7,"filename":"/home/alanz/mysrc/github/alanz/haskell-ide-engine/test/testdata/liquid/Evens.hs"},"realSpan":true},[["xs","[{lq_tmp$x##3 : GHC.Types.Int | lq_tmp$x##3 mod 2 == 0}]"]]],[{"spanInfo":{"startLine":18,"endLine":18,"endCol":40,"startCol":32,"filename":"/home/alanz/mysrc/github/alanz/haskell-ide-engine/test/testdata/liquid/Evens.hs"},"realSpan":true},[["lq_anf$##7205759403792802149","{lq_tmp$x##967 : GHC.Types.Bool | lq_tmp$x##967 <=> ds_d2dq mod 2 == 0}"]]],[{"spanInfo":{"startLine":18,"endLine":18,"endCol":26,"startCol":21,"filename":"/home/alanz/mysrc/github/alanz/haskell-ide-engine/test/testdata/liquid/Evens.hs"},"realSpan":true},[[null,"{lq_tmp$x##1065 : lq_tmp$x##1066:GHC.Types.Int -> lq_tmp$x##1067:GHC.Types.Int -> [{lq_tmp$x##1060 : GHC.Types.Int | lq_tmp$x##1066 <= lq_tmp$x##1060\n                                                                                                                     && lq_tmp$x##1060 < lq_tmp$x##1067}] | lq_tmp$x##1065 == Main.range}"]]],[{"spanInfo":{"startLine":18,"endLine":18,"endCol":6,"startCol":1,"filename":"/home/alanz/mysrc/github/alanz/haskell-ide-engine/test/testdata/liquid/Evens.hs"},"realSpan":true},[["Main.evens","lq_tmp$x##861:{lq_tmp$x##0 : GHC.Types.Int | lq_tmp$x##0 >= 0} -> [{lq_tmp$x##3 : GHC.Types.Int | lq_tmp$x##3 mod 2 == 0}]"]]],[{"spanInfo":{"startLine":6,"endLine":6,"endCol":10,"startCol":1,"filename":"/home/alanz/mysrc/github/alanz/haskell-ide-engine/test/testdata/liquid/Evens.hs"},"realSpan":true},[["Main.weAreEven","[{lq_tmp$x##3 : GHC.Types.Int | lq_tmp$x##3 mod 2 == 0}]"]]],[{"spanInfo":{"startLine":29,"endLine":29,"endCol":17,"startCol":16,"filename":"/home/alanz/mysrc/github/alanz/haskell-ide-engine/test/testdata/liquid/Evens.hs"},"realSpan":true},[[null,"lq_tmp$x##371:GHC.Types.Int -> lq_tmp$x##372:GHC.Types.Int -> {lq_tmp$x##374 : GHC.Types.Int^\"lq_tmp$x##373\" | lq_tmp$x##374 == lq_tmp$x##371 + lq_tmp$x##372}"]]],[{"spanInfo":{"startLine":22,"endLine":22,"endCol":33,"startCol":29,"filename":"/home/alanz/mysrc/github/alanz/haskell-ide-engine/test/testdata/liquid/Evens.hs"},"realSpan":true},[["lq_anf$##7205759403792802141","{lq_tmp$x##736 : GHC.Types.Int^\"lq_tmp$x##735\" | lq_tmp$x##736 == lo##a1TC + lq_anf$##7205759403792802140##d2dK}"]]],[{"spanInfo":{"startLine":21,"endLine":21,"endCol":6,"startCol":1,"filename":"/home/alanz/mysrc/github/alanz/haskell-ide-engine/test/testdata/liquid/Evens.hs"},"realSpan":true},[["Main.range","lq_tmp$x##666:GHC.Types.Int -> lq_tmp$x##667:GHC.Types.Int -> [{v : GHC.Types.Int | lq_tmp$x##666 <= v\n                                                                                    && v < lq_tmp$x##667}]"]]],[{"spanInfo":{"startLine":18,"endLine":18,"endCol":38,"startCol":32,"filename":"/home/alanz/mysrc/github/alanz/haskell-ide-engine/test/testdata/liquid/Evens.hs"},"realSpan":true},[[null,"{lq_tmp$x##968 : lq_tmp$x##969:{lq_tmp$x##966 : GHC.Types.Int | lq_tmp$x##966 >= 0} -> {lq_tmp$x##967 : GHC.Types.Bool | lq_tmp$x##967 <=> lq_tmp$x##969 mod 2 == 0} | lq_tmp$x##968 == Main.isEven}"]]],[{"spanInfo":{"startLine":18,"endLine":18,"endCol":41,"startCol":11,"filename":"/home/alanz/mysrc/github/alanz/haskell-ide-engine/test/testdata/liquid/Evens.hs"},"realSpan":true},[["lq_anf$##7205759403792802151","{VV##881 : [{VV##874 : GHC.Types.Int^\"lq_tmp$x##876\" | $k_##875[ds_d2dp:=ds_d2dr][lq_tmp$x##889:=ds_d2dr][lq_tmp$x##885:=ds_d2dr]}]^\"lq_tmp$x##883\" | $k_##882[ds_d2dp:=ds_d2dr][lq_tmp$x##889:=ds_d2dr][lq_tmp$x##885:=ds_d2dr]}"]]],[{"spanInfo":{"startLine":22,"endLine":22,"endCol":9,"startCol":8,"filename":"/home/alanz/mysrc/github/alanz/haskell-ide-engine/test/testdata/liquid/Evens.hs"},"realSpan":true},[[null,"lq_tmp$x##681:{lq_tmp$x##686 : GHC.Types.Int^\"lq_tmp$x##685\" | $k_##684[VV##683:=lq_tmp$x##686][lq_tmp$x##680:=GHC.Classes.$fOrdInt]} -> lq_tmp$x##682:{lq_tmp$x##686 : GHC.Types.Int^\"lq_tmp$x##685\" | $k_##684[VV##683:=lq_tmp$x##686][lq_tmp$x##680:=GHC.Classes.$fOrdInt]} -> {lq_tmp$x##676 : GHC.Types.Bool | lq_tmp$x##676 <=> lq_tmp$x##681 < lq_tmp$x##682}"]]],[{"spanInfo":{"startLine":6,"endLine":6,"endCol":29,"startCol":28,"filename":"/home/alanz/mysrc/github/alanz/haskell-ide-engine/test/testdata/liquid/Evens.hs"},"realSpan":true},[[null,"lq_tmp$x##1147:GHC.Types.Int -> lq_tmp$x##1148:GHC.Types.Int -> {lq_tmp$x##1150 : GHC.Types.Int^\"lq_tmp$x##1149\" | lq_tmp$x##1150 == lq_tmp$x##1147 - lq_tmp$x##1148}"]]],[{"spanInfo":{"startLine":6,"endLine":6,"endCol":21,"startCol":20,"filename":"/home/alanz/mysrc/github/alanz/haskell-ide-engine/test/testdata/liquid/Evens.hs"},"realSpan":true},[[null,"lq_tmp$x##1117:GHC.Types.Int -> lq_tmp$x##1118:GHC.Types.Int -> {lq_tmp$x##1120 : GHC.Types.Int^\"lq_tmp$x##1119\" | lq_tmp$x##1120 == lq_tmp$x##1117 - lq_tmp$x##1118}"]]],[{"spanInfo":{"startLine":29,"endLine":29,"endCol":10,"startCol":8,"filename":"/home/alanz/mysrc/github/alanz/haskell-ide-engine/test/testdata/liquid/Evens.hs"},"realSpan":true},[["xs","[{lq_tmp$x##0 : GHC.Types.Int | lq_tmp$x##0 >= 0}]"]]],[{"spanInfo":{"startLine":26,"endLine":26,"endCol":31,"startCol":14,"filename":"/home/alanz/mysrc/github/alanz/haskell-ide-engine/test/testdata/liquid/Evens.hs"},"realSpan":true},[["lq_anf$##7205759403792802137","{VV##479 : [{VV##472 : GHC.Types.Int^\"lq_tmp$x##474\" | $k_##473[lq_tmp$x##483:=ds_d2dd][lq_tmp$x##487:=ds_d2dd][ds_d2db:=ds_d2dd]}]^\"lq_tmp$x##481\" | $k_##480[lq_tmp$x##483:=ds_d2dd][lq_tmp$x##487:=ds_d2dd][ds_d2db:=ds_d2dd]}"]]],[{"spanInfo":{"startLine":26,"endLine":26,"endCol":18,"startCol":17,"filename":"/home/alanz/mysrc/github/alanz/haskell-ide-engine/test/testdata/liquid/Evens.hs"},"realSpan":true},[[null,"lq_tmp$x##573:GHC.Types.Int -> lq_tmp$x##574:GHC.Types.Int -> {lq_tmp$x##576 : GHC.Types.Int^\"lq_tmp$x##575\" | lq_tmp$x##576 == lq_tmp$x##573 + lq_tmp$x##574}"]]],[{"spanInfo":{"startLine":15,"endLine":15,"endCol":28,"startCol":25,"filename":"/home/alanz/mysrc/github/alanz/haskell-ide-engine/test/testdata/liquid/Evens.hs"},"realSpan":true},[["lq_anf$##7205759403792802146","{lq_tmp$x##836 : GHC.Types.Int^\"lq_tmp$x##835\" | lq_tmp$x##836 == ds_d2dj - lq_anf$##7205759403792802145##d2dP}"]]],[{"spanInfo":{"startLine":22,"endLine":22,"endCol":12,"startCol":5,"filename":"/home/alanz/mysrc/github/alanz/haskell-ide-engine/test/testdata/liquid/Evens.hs"},"realSpan":true},[["lq_anf$##7205759403792802138","{lq_tmp$x##676 : GHC.Types.Bool | lq_tmp$x##676 <=> lo##a1TC < hi##a1TD}"]]],[{"spanInfo":{"startLine":41,"endLine":41,"endCol":24,"startCol":8,"filename":"/home/alanz/mysrc/github/alanz/haskell-ide-engine/test/testdata/liquid/Evens.hs"},"realSpan":true},[["lq_anf$##7205759403792802127","{lq_tmp$x##191 : [GHC.Types.Char] | lq_tmp$x##191 ~~ lq_anf$##7205759403792802126##d2dw\n                                    && len lq_tmp$x##191 == strLen lq_anf$##7205759403792802126##d2dw}"]]],[{"spanInfo":{"startLine":22,"endLine":22,"endCol":37,"startCol":22,"filename":"/home/alanz/mysrc/github/alanz/haskell-ide-engine/test/testdata/liquid/Evens.hs"},"realSpan":true},[["lq_anf$##7205759403792802142","[{v : GHC.Types.Int | lq_anf$##7205759403792802141##d2dL <= v\n                      && v < hi##a1TD}]"]]],[{"spanInfo":{"startLine":21,"endLine":21,"endCol":9,"startCol":7,"filename":"/home/alanz/mysrc/github/alanz/haskell-ide-engine/test/testdata/liquid/Evens.hs"},"realSpan":true},[["lo","GHC.Types.Int"]]],[{"spanInfo":{"startLine":18,"endLine":18,"endCol":8,"startCol":7,"filename":"/home/alanz/mysrc/github/alanz/haskell-ide-engine/test/testdata/liquid/Evens.hs"},"realSpan":true},[["n","{lq_tmp$x##0 : GHC.Types.Int | lq_tmp$x##0 >= 0}"]]],[{"spanInfo":{"startLine":41,"endLine":41,"endCol":5,"startCol":1,"filename":"/home/alanz/mysrc/github/alanz/haskell-ide-engine/test/testdata/liquid/Evens.hs"},"realSpan":true},[[":Main.main","(GHC.Types.IO {lq_tmp$x##222 : ()^\"lq_tmp$x##221\" \"lq_tmp$x##8\" | $k_##220[lq_tmp$x##218:=Main.main][VV##219:=lq_tmp$x##222]})"]]],[{"spanInfo":{"startLine":15,"endLine":15,"endCol":23,"startCol":17,"filename":"/home/alanz/mysrc/github/alanz/haskell-ide-engine/test/testdata/liquid/Evens.hs"},"realSpan":true},[["Main.isEven","lq_tmp$x##798:{lq_tmp$x##0 : GHC.Types.Int | lq_tmp$x##0 >= 0} -> {v : GHC.Types.Bool | v <=> lq_tmp$x##798 mod 2 == 0}"]]],[{"spanInfo":{"startLine":21,"endLine":21,"endCol":12,"startCol":10,"filename":"/home/alanz/mysrc/github/alanz/haskell-ide-engine/test/testdata/liquid/Evens.hs"},"realSpan":true},[["hi","GHC.Types.Int"]]],[{"spanInfo":{"startLine":26,"endLine":26,"endCol":6,"startCol":1,"filename":"/home/alanz/mysrc/github/alanz/haskell-ide-engine/test/testdata/liquid/Evens.hs"},"realSpan":true},[["Main.shift","lq_tmp$x##456:[{lq_tmp$x##3 : GHC.Types.Int | lq_tmp$x##3 mod 2 == 0}] -> lq_tmp$x##457:{lq_tmp$x##3 : GHC.Types.Int | lq_tmp$x##3 mod 2 == 0} -> [{lq_tmp$x##3 : GHC.Types.Int | lq_tmp$x##3 mod 2 == 0}]"]]]],"o_bots":[],"o_result":{"tag":"Unsafe","contents":[{"msg":"Liquid Type Mismatch\n  Inferred type\n    VV : {v : Int | v == (7 : int)}\n \n  not a subtype of Required type\n    VV : {VV : Int | VV mod 2 == 0}\n \n  In Context","pos":{"spanInfo":{"startLine":9,"endLine":9,"endCol":8,"startCol":1,"filename":"/home/alanz/mysrc/github/alanz/haskell-ide-engine/test/testdata/liquid/Evens.hs"},"realSpan":true}}]}}